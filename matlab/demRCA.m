% DEMRCA Test RCA on TP53 expression data.
%
% SEEALSO : kernCreate, kernCompute, rca
%
% Author: Alfredo A. Kalaitzis, 2011

% RCA

addpath(genpath('~/mlprojects/matlab/general/'))
addpath(genpath('~/mlprojects/gp/matlab/'));
gpToolboxes;

load DellaGatta_data_for_RCAdemo.mat
idx_top500 = sortIndex(1:500);
dtaTP53 = exprs_tp53_RMA(:, idx_top500);
dtaTMXF = exprs_null_RMA(:, idx_top500);

% For every time-point, subtract mean expression along all genes.
% We do not standardise if we need to look at the signal variance in the
% context of all signals variances.
dtaTP53 = ( dtaTP53 - repmat(mean(dtaTP53,2),1,size(dtaTP53,2)) ); %./ ...
%     repmat(std(dtaTP53,0,2), 1, size(dtaTP53,2));
dtaTMXF = ( dtaTMXF - repmat(mean(dtaTMXF,2),1,size(dtaTMXF,2)) ); %./ ...
%     repmat(std(dtaTMXF,0,2), 1, size(dtaTMXF,2));
tTrue = [0:20:240 0 20 40 60 120 180 240]';
kern = kernCreate(tTrue, 'rbf');

typDiff = 20; % Typical time difference between samples.
kern.inverseWidth = 1/(typDiff*typDiff); % Characteristic inverse-width.
% First kernel assumes the two profiles are generated by the same process;
% the second, that the two profiles are generated independently.
K_comb = kernCompute(kern, tTrue) + eye(20)*0.01;
K_ind = blkdiag(K_comb(1:13,1:13),K_comb(14:end,14:end));
% P
figure(1), clf,
subplot(5,2,1), imshow(K_comb), title('Combined RBF-kernels')
line([0 20.5],[13.5 13.5],'color','w'), line([13.5 13.5],[0 20.5],'color','w')
subplot(5,2,2), imshow(K_ind), title('Independent RBF-kernels')
line([0 20.5],[13.5 13.5],'color','w'), line([13.5 13.5],[0 20.5],'color','w')
%P

Y = [dtaTP53' dtaTMXF']'; % Concatenate profiles of both conditions.
[X,D] = rca(Y, K_comb);
[X_,D_] = rca(Y, K_ind);
% P
subplot(5,2,3:4);
bar([D D_]), title('Generalised eigenvalue spectrum'),
legend('Combined','Independent'), xlim([0 21])
%%
subplot(5,2,5:6);
plot(X(:,1:3)), ylim([-5 5]), xlim([0 21])
title('Generalised eigenvectors (combined case)')
%%
subplot(5,2,7:8);
plot(X_(:,1:20)), ylim([-5 5]), xlim([0 21])
title('Generalised eigenvectors (independent case)')
%%
subplot(5,2,9:10);
i=32; m=3;
plot([0 27], [0 0], '--', 'color', [.8 .8 .8]), hold on,
plot((1:13), Y(1:13,i)', '.-b', [14:17 20 23 26], Y(14:end,i)', '.-r'),
xlim([0 27])
Xproj = X(:,1:m)*X(:,1:m)'*Y(:,i); Xproj = Xproj/(D(1));
plot((1:13), Xproj(1:13), '.-k', [14:17 20 23 26], Xproj(14:end,1)', '.-k'),
hold off, title('Joint-profile projection onto principal gen''d eigenvectors')
%P
proj = X(:,1:2)'*Y;
figure(2), clf, hold on, axis equal
plot(proj(1,:), proj(2,:), '.','markersize',1 )
% scatter(proj(1,:), proj(2,:),[], dists)
cmap = flipud(colormap);
dists = sqrt(sum(proj.^2)); dists = dists/max(dists);
for j = 1:size(Y,2)
    text(proj(1,j), proj(2,j), num2str(j), ...
        'color', cmap(floor(dists(j)*length(cmap)),:), ...
        'fontsize', 1.5+dists(j)*20);
    
end

